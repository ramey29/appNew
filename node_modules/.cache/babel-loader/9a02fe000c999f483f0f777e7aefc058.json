{"remainingRequest":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/babel-loader/lib/index.js!/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rameshwarbishnoi/ramey29.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rameshwarbishnoi/ramey29.github.io/src/components/ConversionHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rameshwarbishnoi/ramey29.github.io/src/components/ConversionHistory.vue","mtime":1552726783712},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _JSON$stringify from \"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport { publishEvent } from '../common/Observer'; // import {autocomplete} from \"./../service/autoComplete\"\n\nexport default {\n  data: function data() {\n    return {\n      searchTerm: '',\n      time: 'time',\n      rating: 'rating',\n      restaurants: [],\n      tags: [],\n      tagsBoolean: false,\n      order: 'asc',\n      page: 1,\n      limit: 40,\n      totalCount: 30\n    };\n  },\n  components: {//Pagination\n  },\n  created: function created() {\n    this.fetchTransactions(this.limit, this.page, null, null); // this.autocomplete(document.getElementById(\"searchInput\"), this.restaurants);\n  },\n  mounted: function mounted() {},\n  methods: {\n    close: function close($event, index) {\n      $event.target.parentNode.remove();\n      this.tags.splice(index, 1);\n      this.searchTerm = this.tags.join(' ');\n      console.log(this.tags);\n\n      if (this.tags.length < 1) {\n        this.tagsBoolean = false;\n        this.fetchTransactions(this.limit, this.page, null, null);\n      } else {\n        this.search(this.searchTerm);\n      }\n    },\n    sortRestaurant: function sortRestaurant(sortText) {\n      sortText == 'time' ? sortText = 'timeclosest' : sortText = 'starrating';\n      this.fetchTransactions(this.limit, this.page, sortText, 'asc');\n    },\n    fetchTransactions: function fetchTransactions(_limit, _page, _sort, _order) {\n      var _this = this;\n\n      AppConversionService.getRestaurant(_limit, _page, _sort, _order).then(function (response) {\n        console.log(response);\n        _this.restaurants = response.data;\n        _this.totalCount = response.headers[\"x-total-count\"];\n        localStorage.setItem('restaurants', _JSON$stringify(_this.restaurants));\n      }).catch(function (error) {});\n    },\n    search: function search(text) {\n      if (this.searchTerm != '') {\n        this.showViewAll = 'false';\n        this.tags = [];\n        this.tags = text.split(' ');\n        this.tagsBoolean = true;\n      } else {\n        this.Emptysearch();\n        return;\n      }\n\n      var searchResults = [];\n      var searchText = text.toLowerCase();\n\n      for (var i = 0; i < this.restaurants.length; i++) {\n        var name = this.restaurants[i].name.toLowerCase().search(searchText);\n        var abc = this.restaurants[i].foodtype.filter(function (foodtypes) {\n          return foodtypes.toLowerCase().indexOf(searchText) > -1;\n        });\n\n        if (name > -1 || abc.length > 0) {\n          searchResults.push(this.restaurants[i]);\n        }\n      }\n\n      this.noSearchResults = searchResults.length == 0 ? true : false;\n      this.restaurants = [].concat(searchResults);\n    },\n    Emptysearch: function Emptysearch() {\n      if (this.searchTerm != '') {} else {\n        this.noSearchResults = false;\n        this.showViewAll = 'true';\n        this.fetchTransactions(this.limit, this.page, null, null);\n      }\n    },\n    autocomplete: function autocomplete(inp, arr) {\n      /*the autocomplete function takes two arguments,\n      the text field element and an array of possible autocompleted values:*/\n      var currentFocus;\n      /*execute a function when someone writes in the text field:*/\n\n      inp.addEventListener(\"input\", function (e) {\n        var a,\n            b,\n            i,\n            val = this.value;\n        /*close any already open lists of autocompleted values*/\n\n        closeAllLists();\n\n        if (!val) {\n          return false;\n        }\n\n        currentFocus = -1;\n        /*create a DIV element that will contain the items (values):*/\n\n        a = document.createElement(\"DIV\");\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n        a.setAttribute(\"class\", \"autocomplete-items\");\n        /*append the DIV element as a child of the autocomplete container:*/\n\n        this.parentNode.appendChild(a);\n        /*for each item in the array...*/\n\n        for (i = 0; i < arr.length; i++) {\n          /*check if the item starts with the same letters as the text field value:*/\n          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n            /*create a DIV element for each matching element:*/\n            b = document.createElement(\"DIV\");\n            /*make the matching letters bold:*/\n\n            b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n            b.innerHTML += arr[i].substr(val.length);\n            /*insert a input field that will hold the current array item's value:*/\n\n            b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n            /*execute a function when someone clicks on the item value (DIV element):*/\n\n            b.addEventListener(\"click\", function (e) {\n              /*insert the value for the autocomplete text field:*/\n              inp.value = this.getElementsByTagName(\"input\")[0].value;\n              /*close the list of autocompleted values,\n              (or any other open lists of autocompleted values:*/\n\n              closeAllLists();\n            });\n            a.appendChild(b);\n          }\n        }\n      });\n      /*execute a function presses a key on the keyboard:*/\n\n      inp.addEventListener(\"keydown\", function (e) {\n        var x = document.getElementById(this.id + \"autocomplete-list\");\n        if (x) x = x.getElementsByTagName(\"div\");\n\n        if (e.keyCode == 40) {\n          /*If the arrow DOWN key is pressed,\n          increase the currentFocus variable:*/\n          currentFocus++;\n          /*and and make the current item more visible:*/\n\n          addActive(x);\n        } else if (e.keyCode == 38) {\n          //up\n\n          /*If the arrow UP key is pressed,\n          decrease the currentFocus variable:*/\n          currentFocus--;\n          /*and and make the current item more visible:*/\n\n          addActive(x);\n        } else if (e.keyCode == 13) {\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\n          e.preventDefault();\n\n          if (currentFocus > -1) {\n            /*and simulate a click on the \"active\" item:*/\n            if (x) x[currentFocus].click();\n          }\n        }\n      });\n\n      function addActive(x) {\n        /*a function to classify an item as \"active\":*/\n        if (!x) return false;\n        /*start by removing the \"active\" class on all items:*/\n\n        removeActive(x);\n        if (currentFocus >= x.length) currentFocus = 0;\n        if (currentFocus < 0) currentFocus = x.length - 1;\n        /*add class \"autocomplete-active\":*/\n\n        x[currentFocus].classList.add(\"autocomplete-active\");\n      }\n\n      function removeActive(x) {\n        /*a function to remove the \"active\" class from all autocomplete items:*/\n        for (var i = 0; i < x.length; i++) {\n          x[i].classList.remove(\"autocomplete-active\");\n        }\n      }\n\n      function closeAllLists(elmnt) {\n        /*close all autocomplete lists in the document,\n        except the one passed as an argument:*/\n        var x = document.getElementsByClassName(\"autocomplete-items\");\n\n        for (var i = 0; i < x.length; i++) {\n          if (elmnt != x[i] && elmnt != inp) {\n            x[i].parentNode.removeChild(x[i]);\n          }\n        }\n      }\n      /*execute a function when someone clicks in the document:*/\n\n\n      document.addEventListener(\"click\", function (e) {\n        closeAllLists(e.target);\n      });\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["ConversionHistory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mainContainer\">\n        <div class=\"searchConatiner\">\n            <div class=\"searchInner\">\n                <div class=\"w100\">\n                    <input id=\"searchInput\" @keyup=\"Emptysearch\" v-on:keyup.enter=\"search(searchTerm)\" v-on:keyup=\"autocomplete()\" type=\"text\" class=\"\" v-model=\"searchTerm\" placeholder=\"Search for restaurants near you\" style=\"border: unset;\" autocomplete=\"on\" />\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"search(searchTerm)\">\n                        <span class=\"search-icon\" >SEARCH</span>\n                    </button>\n                    </div>\n                    <div class=\"searchResultDv\" v-if=\"tagsBoolean\" >Search results for : <span v-for=\"(tag, index) in tags\" :key=\"index\">{{tag}} <span class=\"close\" @click=\"close($event,index)\"> | x</span> </span></div>\n                </div>\n                \n            </div>\n        </div>\n        <div class=\"restaurantConatiner\">\n            <div class=\"sorterDV\">\n                    <span>SORT BY: </span>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\"  @click=\"sortRestaurant(time)\">\n                        <span class=\"search-icon\">DELIVERY TIME</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortRestaurant(rating)\">\n                        <span class=\"search-icon\">RATINGS</span>\n                    </button>\n                    </div>\n            </div>\n            <div class=\"restCard clearfix\" v-for=\"(restaurant, index) in restaurants\" :key=\"index\">\n                <div class=\"restImgDv fLft\"><img :src=\"restaurant.img\" /></div>\n                <div class=\"restContentDv fLft\">\n                    <div class=\"restName\">{{restaurant.name}}</div>\n                    <div class=\"restfoodType\">{{restaurant.foodtype.toString()}}</div>\n                    <div class=\"restBottom\"><span class=\"starSpan\"><img alt=\"star image\" src=\"./../assets/img/star.svg\" />{{restaurant.starrating}}</span><span class=\"timeSpan\"><img alt=\"star image\" src=\"./../assets/img/clock.svg\" />{{restaurant.timeclosest}} MINS</span></div>\n                </div>\n            </div>\n        </div>\n\n        <!-- <Pagination :options=\"{page: _page, totalItems: totalItems, limit: _limit}\" @onPaginate=\"paginate\"></Pagination> -->\n    </div>\n</template>\n\n<script>\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport { publishEvent } from '../common/Observer';\n// import {autocomplete} from \"./../service/autoComplete\"\n\n\nexport default {\n   \n    data() {\n        return {\n            searchTerm:'',\n            time:'time',\n            rating:'rating',\n            restaurants: [],\n            tags:[],\n            tagsBoolean:false,\n            order:'asc',\n            page: 1,\n            limit: 40,\n            totalCount: 30\n        }\n    },\n     components: {\n        //Pagination\n    },\n    created() {\n        this.fetchTransactions(this.limit, this.page, null, null);\n        // this.autocomplete(document.getElementById(\"searchInput\"), this.restaurants);\n    },\n    mounted(){\n          \n            \n    },\n    methods: {\n        close($event,index){\n            $event.target.parentNode.remove();\n            this.tags.splice(index,1);\n            this.searchTerm = this.tags.join(' ');\n            console.log(this.tags);\n            if(this.tags.length < 1){\n                this.tagsBoolean = false;\n                this.fetchTransactions(this.limit, this.page, null, null);\n            }else{\n                this.search(this.searchTerm);\n            }\n           \n        },\n\n        sortRestaurant(sortText){\n            sortText == 'time' ? sortText='timeclosest': sortText='starrating';\n            this.fetchTransactions(this.limit, this.page, sortText, 'asc') ;\n        },\n\n        fetchTransactions(_limit, _page, _sort, _order) {\n            AppConversionService.getRestaurant(_limit, _page, _sort, _order)\n                .then(response => {\n                    console.log(response)\n                    this.restaurants = response.data;\n                    this.totalCount =  response.headers[\"x-total-count\"];\n                    localStorage.setItem('restaurants', JSON.stringify(this.restaurants));\n                })\n                .catch(error => {\n              \n                });\n        },\n\n        search(text) {\n            if (this.searchTerm != '') {\n            this.showViewAll = 'false';\n            this.tags = [];\n            this.tags = text.split(' ');\n            this.tagsBoolean =  true;\n            } else {\n            this.Emptysearch();\n            return;\n            }\n            let searchResults = []\n            let searchText = text.toLowerCase();\n            for (var i = 0; i < this.restaurants.length; i++) {\n            let name = this.restaurants[i].name.toLowerCase().search(searchText);\n            const abc = this.restaurants[i].foodtype.filter(foodtypes => foodtypes.toLowerCase().indexOf(searchText) > -1);\n            if (name > -1 || abc.length > 0) {\n                searchResults.push(this.restaurants[i])\n            }\n            }\n            this.noSearchResults = (searchResults.length == 0) ? true : false\n            this.restaurants = [...searchResults];\n      },\n\n      Emptysearch() {\n           if (this.searchTerm != '') {} else {\n            this.noSearchResults = false;\n            this.showViewAll = 'true';\n            this.fetchTransactions(this.limit, this.page, null, null);\n            }\n        },\n      \n        autocomplete(inp, arr) {\n            /*the autocomplete function takes two arguments,\n            the text field element and an array of possible autocompleted values:*/\n            var currentFocus;\n            /*execute a function when someone writes in the text field:*/\n            inp.addEventListener(\"input\", function(e) {\n                var a, b, i, val = this.value;\n                /*close any already open lists of autocompleted values*/\n                closeAllLists();\n                if (!val) { return false;}\n                currentFocus = -1;\n                /*create a DIV element that will contain the items (values):*/\n                a = document.createElement(\"DIV\");\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n                a.setAttribute(\"class\", \"autocomplete-items\");\n                /*append the DIV element as a child of the autocomplete container:*/\n                this.parentNode.appendChild(a);\n                /*for each item in the array...*/\n                for (i = 0; i < arr.length; i++) {\n                /*check if the item starts with the same letters as the text field value:*/\n                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n                    /*create a DIV element for each matching element:*/\n                    b = document.createElement(\"DIV\");\n                    /*make the matching letters bold:*/\n                    b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n                    b.innerHTML += arr[i].substr(val.length);\n                    /*insert a input field that will hold the current array item's value:*/\n                    b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n                    /*execute a function when someone clicks on the item value (DIV element):*/\n                    b.addEventListener(\"click\", function(e) {\n                        /*insert the value for the autocomplete text field:*/\n                        inp.value = this.getElementsByTagName(\"input\")[0].value;\n                        /*close the list of autocompleted values,\n                        (or any other open lists of autocompleted values:*/\n                        closeAllLists();\n                    });\n                    a.appendChild(b);\n                }\n                }\n            });\n            /*execute a function presses a key on the keyboard:*/\n            inp.addEventListener(\"keydown\", function(e) {\n                var x = document.getElementById(this.id + \"autocomplete-list\");\n                if (x) x = x.getElementsByTagName(\"div\");\n                if (e.keyCode == 40) {\n                /*If the arrow DOWN key is pressed,\n                increase the currentFocus variable:*/\n                currentFocus++;\n                /*and and make the current item more visible:*/\n                addActive(x);\n                } else if (e.keyCode == 38) { //up\n                /*If the arrow UP key is pressed,\n                decrease the currentFocus variable:*/\n                currentFocus--;\n                /*and and make the current item more visible:*/\n                addActive(x);\n                } else if (e.keyCode == 13) {\n                /*If the ENTER key is pressed, prevent the form from being submitted,*/\n                e.preventDefault();\n                if (currentFocus > -1) {\n                    /*and simulate a click on the \"active\" item:*/\n                    if (x) x[currentFocus].click();\n                }\n                }\n            });\n            function addActive(x) {\n            /*a function to classify an item as \"active\":*/\n            if (!x) return false;\n            /*start by removing the \"active\" class on all items:*/\n            removeActive(x);\n            if (currentFocus >= x.length) currentFocus = 0;\n            if (currentFocus < 0) currentFocus = (x.length - 1);\n            /*add class \"autocomplete-active\":*/\n            x[currentFocus].classList.add(\"autocomplete-active\");\n            }\n            function removeActive(x) {\n            /*a function to remove the \"active\" class from all autocomplete items:*/\n            for (var i = 0; i < x.length; i++) {\n                x[i].classList.remove(\"autocomplete-active\");\n            }\n            }\n            function closeAllLists(elmnt) {\n            /*close all autocomplete lists in the document,\n            except the one passed as an argument:*/\n            var x = document.getElementsByClassName(\"autocomplete-items\");\n            for (var i = 0; i < x.length; i++) {\n                if (elmnt != x[i] && elmnt != inp) {\n                x[i].parentNode.removeChild(x[i]);\n                }\n            }\n            }\n            /*execute a function when someone clicks in the document:*/\n            document.addEventListener(\"click\", function (e) {\n                closeAllLists(e.target);\n            });\n    }\n    },\n    computed:{\n        \n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mainContainer {width:100%;\n   .searchConatiner{background:url(./../assets/img/foodBg.jpg) no-repeat;background-position:100% 50%;width:100%;height:250px;background-size:cover;position:relative;\n    .searchInner{position:absolute;top:50%;left:50%;transform: translate(-50%,-50%);min-width:60%;}\n    input{width:80%;}\n    .btnDv{display: inline-block;width:16%;padding-left:20px;}\n    .searchResultDv{margin-top: 20px;background: lightgrey;padding: 10px;\n        span{display:inline-block;background: #fff;padding:2px 4px;margin-right:4px;\n        .close{margin:0 2px; cursor:pointer; color: grey;}}\n    }\n   }\n   .restaurantConatiner{\n       width:90%;padding:2% 5%;\n       .restCard{box-shadow: 0 6px 14px 6px rgba(0, 0, 0, 0.08); width:98%;padding:2%;margin-bottom:30px;\n           .restImgDv{width:10%;img{width:110px;height:110px;}}\n           .restContentDv{width:88%;\n               .restName{font-size:16px;line-height:18px;font-weight:bold;margin-bottom:10px;}\n               .restfoodType{font-size:13px;}\n               .restBottom{font-size:14px;margin-top:40px;\n                .starSpan{display:inline-block;width:10%; img{width:18px;height:18px;vertical-align:-4px;padding-right:4px;}}\n                .timeSpan{display:inline-block;width:10%; img{width:16px;height:16px;vertical-align:-3px;padding-right:4px;}}\n               \n               }\n           }\n       }\n       .sorterDV{margin-bottom:20px;width:100%;\n       .btnDv{display: inline-block;width:12%;padding-left:20px;}\n       }\n   }\n  \n\n}\n\n</style>"],"sourceRoot":"src/components"}]}