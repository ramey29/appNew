{"remainingRequest":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/babel-loader/lib/index.js!/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rameshwarbishnoi/ramey29.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rameshwarbishnoi/ramey29.github.io/src/components/ConversionHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rameshwarbishnoi/ramey29.github.io/src/components/ConversionHistory.vue","mtime":1552897405637},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _Set from \"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"/Users/rameshwarbishnoi/ramey29.github.io/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport { publishEvent } from '../common/Observer';\nimport { autocomplete } from \"./../service/autoComplete\";\nexport default {\n  data: function data() {\n    return {\n      searchTerm: '',\n      time: 'time',\n      rating: 'rating',\n      restaurants: [],\n      tags: [],\n      tagsBoolean: false,\n      order: 'asc',\n      autocompleteVar: [],\n      page: 1,\n      limit: 40,\n      totalCount: 30\n    };\n  },\n  components: {//Pagination\n  },\n  created: function created() {\n    this.fetchTransactions(this.limit, this.page, null, null);\n  },\n  mounted: function mounted() {},\n  methods: {\n    autoComplete: function autoComplete() {\n      autocomplete(document.getElementById(\"searchInput\"), this.autocompleteVar);\n    },\n    close: function close($event, index) {\n      $event.target.parentNode.remove();\n      this.tags.splice(index, 1);\n      this.searchTerm = this.tags.join(' ');\n      document.getElementById('searchInput').value = this.searchTerm;\n      console.log(this.tags);\n\n      if (this.tags.length < 1) {\n        this.tagsBoolean = false;\n        this.fetchTransactions(this.limit, this.page, null, null);\n      } else {\n        this.search(this.searchTerm);\n      }\n    },\n    sortRestaurant: function sortRestaurant(sortText) {\n      sortText == 'time' ? sortText = 'timeclosest' : sortText = 'starrating';\n      this.fetchTransactions(this.limit, this.page, sortText, 'asc');\n    },\n    fetchTransactions: function fetchTransactions(_limit, _page, _sort, _order) {\n      var _this = this;\n\n      AppConversionService.getRestaurant(_limit, _page, _sort, _order).then(function (response) {\n        console.log(response);\n        _this.restaurants = response.data;\n        _this.totalCount = response.headers[\"x-total-count\"];\n        localStorage.setItem('restaurants', _JSON$stringify(_this.restaurants));\n\n        if (_this.autocompleteVar.length < 1) {\n          var autoVar = _toConsumableArray(new _Set(response.data.map(function (a) {\n            return a.name;\n          })));\n\n          var x = _this.autocompleteVar.concat(autoVar);\n\n          _this.autocompleteVar = _toConsumableArray(x);\n          console.log(_this.autocompleteVar);\n          localStorage.setItem('autocompleteVar', _JSON$stringify(_this.autocompleteVar));\n        }\n      }).catch(function (error) {});\n    },\n    search: function search(text) {\n      var x = document.getElementById('searchInput').value;\n      this.searchTerm = text = text == x ? text : x;\n\n      if (this.searchTerm != '') {\n        this.showViewAll = 'false';\n        this.tags = [];\n        this.tags = text.split(' ');\n        this.tagsBoolean = true;\n      } else {\n        this.Emptysearch();\n        return;\n      }\n\n      var searchResults = [];\n      var searchText = text.toLowerCase();\n\n      for (var i = 0; i < this.restaurants.length; i++) {\n        var name = this.restaurants[i].name.toLowerCase().search(searchText);\n        var abc = this.restaurants[i].foodtype.filter(function (foodtypes) {\n          return foodtypes.toLowerCase().indexOf(searchText) > -1;\n        });\n\n        if (name > -1 || abc.length > 0) {\n          searchResults.push(this.restaurants[i]);\n        }\n      }\n\n      this.autocompleteVar.push(text);\n      this.noSearchResults = searchResults.length == 0 ? true : false;\n      this.restaurants = [].concat(searchResults);\n    },\n    Emptysearch: function Emptysearch() {\n      if (this.searchTerm != '') {} else {\n        this.noSearchResults = false;\n        this.showViewAll = 'true';\n        this.tagsBoolean = false;\n        this.fetchTransactions(this.limit, this.page, null, null);\n      }\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["ConversionHistory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mainContainer\">\n        <div class=\"searchConatiner\">\n            <div class=\"searchInner\">\n                <div class=\"w100\">\n                    <input v-model=\"searchTerm\" @keyup=\"Emptysearch\" v-on:keyup.enter=\"search(searchTerm)\" v-on:keyup=\"Emptysearch()\" v-on:keydown=\"autoComplete()\" type=\"text\" class=\"\"  placeholder=\"Search for restaurants near you\" autocomplete=\"on\" id=\"searchInput\"/>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"search(searchTerm)\">\n                        <span class=\"search-icon\" >SEARCH</span>\n                    </button>\n                    </div>\n                    <div class=\"searchResultDv\" v-if=\"tagsBoolean\" >Search results for : <span v-for=\"(tag, index) in tags\" :key=\"index\">{{tag}} <span class=\"close\" @click=\"close($event,index)\"> | x</span> </span></div>\n                </div>\n                \n            </div>\n        </div>\n        <div class=\"restaurantConatiner\">\n            <div class=\"sorterDV\">\n                    <span>SORT BY: </span>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\"  @click=\"sortRestaurant(time)\">\n                        <span class=\"search-icon\">DELIVERY TIME</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortRestaurant(rating)\">\n                        <span class=\"search-icon\">RATINGS</span>\n                    </button>\n                    </div>\n            </div>\n            <div class=\"restCard clearfix\" v-for=\"(restaurant, index) in restaurants\" :key=\"index\">\n                <div class=\"restImgDv fLft\"><img :src=\"restaurant.img\" /></div>\n                <div class=\"restContentDv fLft\">\n                    <div class=\"restName\">{{restaurant.name}}</div>\n                    <div class=\"restfoodType\">{{restaurant.foodtype.toString()}}</div>\n                    <div class=\"restBottom\"><span class=\"starSpan\"><img alt=\"star image\" src=\"./../assets/img/star.svg\" />{{restaurant.starrating}}</span><span class=\"timeSpan\"><img alt=\"star image\" src=\"./../assets/img/clock.svg\" />{{restaurant.timeclosest}} MINS</span></div>\n                </div>\n            </div>\n        </div>\n\n        <!-- <Pagination :options=\"{page: _page, totalItems: totalItems, limit: _limit}\" @onPaginate=\"paginate\"></Pagination> -->\n    </div>\n</template>\n\n<script>\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport { publishEvent } from '../common/Observer';\nimport {autocomplete} from \"./../service/autoComplete\"\n\n\nexport default {\n   \n    data() {\n        return {\n            searchTerm:'',\n            time:'time',\n            rating:'rating',\n            restaurants: [],\n            tags:[],\n            tagsBoolean:false,\n            order:'asc',\n            autocompleteVar: [],\n            page: 1,\n            limit: 40,\n            totalCount: 30\n        }\n    },\n     components: {\n        //Pagination\n    },\n    created() {\n        this.fetchTransactions(this.limit, this.page, null, null);\n    },\n    mounted(){\n          \n            \n    },\n    methods: { \n        autoComplete(){\n            autocomplete(document.getElementById(\"searchInput\"), this.autocompleteVar);\n        },\n        \n        close($event,index){\n            $event.target.parentNode.remove();\n            this.tags.splice(index,1);\n            this.searchTerm = this.tags.join(' ');\n            document.getElementById('searchInput').value = this.searchTerm;\n            console.log(this.tags);\n            if(this.tags.length < 1){\n                this.tagsBoolean = false;\n                this.fetchTransactions(this.limit, this.page, null, null);\n            }else{\n                this.search(this.searchTerm);\n            }\n           \n        },\n\n        sortRestaurant(sortText){\n            sortText == 'time' ? sortText='timeclosest': sortText='starrating';\n            this.fetchTransactions(this.limit, this.page, sortText, 'asc') ;\n        },\n\n        fetchTransactions(_limit, _page, _sort, _order) {\n            AppConversionService.getRestaurant(_limit, _page, _sort, _order)\n                .then(response => {\n                    console.log(response)\n                    this.restaurants = response.data;\n                    this.totalCount =  response.headers[\"x-total-count\"];\n                    localStorage.setItem('restaurants', JSON.stringify(this.restaurants));\n                    if(this.autocompleteVar.length < 1){\n                        let autoVar = [...new Set(response.data.map(a => a.name))];\n                        let x = this.autocompleteVar.concat(autoVar);\n                        this.autocompleteVar = [...x]\n                        console.log(this.autocompleteVar);\n                        localStorage.setItem('autocompleteVar', JSON.stringify(this.autocompleteVar));\n                    }\n                    \n                })\n                .catch(error => {\n              \n                });\n        },\n\n        search(text) {\n            let x = document.getElementById('searchInput').value;\n            this.searchTerm = text = text == x ? text : x;\n            if (this.searchTerm != '') {\n                this.showViewAll = 'false';\n                this.tags = [];\n                this.tags = text.split(' ');\n                this.tagsBoolean =  true;\n            } else {\n                this.Emptysearch();\n                return;\n            }\n            \n            let searchResults = []\n            let searchText = text.toLowerCase();\n            for (var i = 0; i < this.restaurants.length; i++) {\n            let name = this.restaurants[i].name.toLowerCase().search(searchText);\n            \n            const abc = this.restaurants[i].foodtype.filter(foodtypes => foodtypes.toLowerCase().indexOf(searchText) > -1);\n            if (name > -1 || abc.length > 0) {\n                searchResults.push(this.restaurants[i]);\n            }\n            }\n            this.autocompleteVar.push(text);\n            this.noSearchResults = (searchResults.length == 0) ? true : false\n            this.restaurants = [...searchResults];\n      },\n\n      Emptysearch() {\n           if (this.searchTerm != '') {} else {\n            this.noSearchResults = false;\n            this.showViewAll = 'true';\n            this.tagsBoolean =  false;\n            this.fetchTransactions(this.limit, this.page, null, null);\n            }\n        },\n      \n        \n    },\n    computed:{\n        \n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mainContainer {width:100%;\n   .searchConatiner{background:url(./../assets/img/foodBg.jpg) no-repeat;background-position:100% 50%;width:100%;height:250px;background-size:cover;position:relative;\n    .searchInner{position:absolute;top:50%;left:50%;transform: translate(-50%,-50%);min-width:60%;}\n    input{width:80%;border: unset;position:relative;}\n    .btnDv{display: inline-block;width:16%;padding-left:20px;}\n    .searchResultDv{margin-top: 20px;background: lightgrey;padding: 10px;\n        span{display:inline-block;background: #fff;padding:2px 4px;margin-right:4px;\n        .close{margin:0 2px; cursor:pointer; color: grey;}}\n    }\n   }\n   .restaurantConatiner{\n       width:90%;padding:2% 5%;\n       .restCard{box-shadow: 0 6px 14px 6px rgba(0, 0, 0, 0.08); width:98%;padding:2%;margin-bottom:30px;\n           .restImgDv{width:10%;img{width:110px;height:110px;}}\n           .restContentDv{width:88%;\n               .restName{font-size:16px;line-height:18px;font-weight:bold;margin-bottom:10px;}\n               .restfoodType{font-size:13px;}\n               .restBottom{font-size:14px;margin-top:40px;\n                .starSpan{display:inline-block;width:10%; img{width:18px;height:18px;vertical-align:-4px;padding-right:4px;}}\n                .timeSpan{display:inline-block;width:10%; img{width:16px;height:16px;vertical-align:-3px;padding-right:4px;}}\n               \n               }\n           }\n       }\n       .sorterDV{margin-bottom:20px;width:100%;\n       .btnDv{display: inline-block;width:12%;padding-left:20px;}\n       }\n   }\n}\n</style>\n"],"sourceRoot":"src/components"}]}